@model Northwind.Contracts.Dto.Product.ProductPhotoGroupDto

@{
    ViewData["Title"] = "Create";
}

@using (Html.BeginForm("CreateProductPhoto"
, "ProductsPagedServer"
, FormMethod.Post
, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4 class="mb-3">Create Product Photos</h4>
    <hr />
    @Html.ValidationSummary(true,"",new {@class="text-danger"})
    <div class="row g-3">
        <div class="col-md-10">
            @Html.LabelFor(model => model.productForCreateDto.ProductName, htmlAttributes : new{@class="form-label"})
            @Html.TextBox("productForCreateDto.ProductName",string.Empty,new{@placeholder="Product Name",@class="form-control"})
        </div>
    </div>
    <div class="row g-3">
        <div class="col-md-5">
            @Html.LabelFor(model => model.productForCreateDto.CategoryId, htmlAttributes : new{@class="form-label"})
            @Html.DropDownList("productForCreateDto.CategoryId",ViewBag.CategoryId, String.Empty, new {@class="form-control"})
        </div>
        <div class="col-md-5">
            @Html.LabelFor(model => model.productForCreateDto.SupplierId, htmlAttributes : new{@class="form-label"})
            @Html.DropDownList("productForCreateDto.SupplierId",ViewBag.SupplierId, String.Empty, new {@class="form-control"})
        </div>
    </div>
    <div class="row g-3">
        <div class="col-md-5">
            @Html.LabelFor(model => model.productForCreateDto.UnitsInStock, htmlAttributes : new{@class="form-label"})
            @Html.TextBox("productForCreateDto.UnitsInStock",string.Empty,new{@placeholder="Units In Stock",@class="form-control"})
        </div>
        <div class="col-md-5">
            @Html.LabelFor(model => model.productForCreateDto.UnitPrice, htmlAttributes : new{@class="form-label"})
            @Html.TextBox("productForCreateDto.UnitPrice",string.Empty,new{@placeholder="Unit Price",@class="form-control"})
        </div>
    </div>
    <div class="row g-3">
        <div class="col-md-10">
            @Html.CheckBox("productForCreateDto.Discontinued",false,new{@class="form-check-input"})
            @Html.LabelFor(model => model.productForCreateDto.Discontinued, htmlAttributes : new{@class="form-label"})
        </div>
    </div>
    <div class="col-9">
        <div class="row text-left">
            <div class ="col-lg-4 col-md-4 col-6">
                <img id="preview1" style="widgth:100px;height:100px" />
                @Html.LabelFor(model => model.Photo1, htmlAttributes : new{@class="form-label)"})
                @Html.TextBoxFor(model => model.Photo1,"",new{@type="file",@accept="image/*",@onchange="previewImage(this,'preview1')"})
            </div>
            
            <div class ="col-lg-4 col-md-4 col-6">
                <img id="preview2" style="widgth:100px;height:100px" />
                @Html.LabelFor(model => model.Photo2, htmlAttributes : new{@class="form-label"})
                @Html.TextBoxFor(model => model.Photo2,"",new{@type="file",@accept="image/*", @onchange="previewImage(this,'preview2')"})
            </div>
            
            <div class ="col-lg-4 col-md-4 col-6">
                <img id="preview3" style="widgth:100px;height:100px" />
                @Html.LabelFor(model => model.Photo3, htmlAttributes : new{@class="form-label"})
                @Html.TextBoxFor(model => model.Photo3,"",new{@type="file",@accept="image/*", @onchange="previewImage(this,'preview3')"})
            </div>
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Create</button>
}
<script>
    function previewImage(el,value) {
    ///store image from to variable files
    const files= el.files[0];
    ///create elemet  file reader
    const fileReader = new FileReader();
    //read file from input type
    fileReader.readAsDataURL(files);
    //send result base 64 image to element html image review1
    fileReader.onload= function (event){
        document.getElementById(value).src = event.target.result;
        }
    }
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
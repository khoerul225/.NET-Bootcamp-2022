@model X.PagedList.IPagedList<Northwind.Contracts.Dto.Product.ProductDto>
@using X.PagedList.Mvc.Core


<link href="~/css/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewData["Title"] = "Index";
}

<h1>Index Paginaton Server</h1>
@using (Html.BeginForm("Index","ProductsPagedServer", FormMethod.Get))
{
    <div>
        <p>
            Find By Product Name : @Html.TextBox("SearchString",ViewBag.CurrentFilter as string)
            <input type ="submit" value ="Search"/>
             
        </p>
        <p>
            Banyak Tabel : @Html.DropDownList("FetchSize",ViewBag.pageList as SelectList,"5",
            new {
                   @class="form-select form-select-sm mb-2",
                  @onchange="getFetchSize(this.value)"
            } 

            )
        </p>
        <p><a asp-action="Index" asp-route-sortOrder=@ViewBag.ProductNameSort>Sorting Berdasarkan Nama</a></p>
        <p><a asp-action="Index" asp-route-sortOrder=@ViewBag.UnitPriceSort>Sorting Berdasarkan Harga</a></p>

 </div>    
}


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder=@ViewBag.NameProductSort>@Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)</a>
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.QuantityPerUnit)
            </th>*@
            <th>
                <a asp-action="Index" asp-route-sortOrder=@ViewBag.UnitPriceSort>@Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice)</a>
            </th>

            
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UnitsOnOrder)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discontinued)
            </th>*@
  @*          <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Category.CategoryName)
            </th>*@
            @*<th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>*@
  @*          <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>*@
            @*<td>
                @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
            </td>*@
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager(Model,page => Url.Action("Index", new {page,CurrentFilter=ViewBag.CurrentFilter}))

<script>
    function getFetchSize(value) {
        document.location.href ="/ProductsPagedServer?FetchSize="+value;
    }
</script>